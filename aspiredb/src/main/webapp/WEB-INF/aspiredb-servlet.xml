<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.directwebremoting.org/schema/spring-dwr
    	http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="ubc.pavlab.aspiredb.server" />
	<tx:annotation-driven />

	<aop:aspectj-autoproxy />



	<!-- This is provided by spring by default, but this declaration is needed 
		because we define other mappers, and to allow configuration of the interceptor; 
		otherwise this would be configured by default. TODO: switch to RequestMappingHandlerMapping -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="1" />
	</bean>
	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<dwr:controller id="dwrController" debug="true">
		<dwr:config-param name="generateDtoClasses" value="dtoall" />
		<dwr:config-param name="allowScriptTagRemoting"
			value="true" />
		<dwr:config-param name="crossDomainSessionSecurity"
			value="false" />
	</dwr:controller>

	<!-- this is a bad idea for live, but can be useful in testing -->
	<dwr:configuration>
		<dwr:convert type="exception" class="java.lang.Exception" />
		<dwr:convert type="exception" class="java.lang.Throwable" />
		<dwr:convert type="bean" class="java.lang.StackTraceElement" />
	</dwr:configuration>

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property value="true" name="alwaysUseFullPath"></property>
		<property name="mappings">
			<props>
				<prop key="/dwr/**/*">dwrController</prop>
				<prop key="/home.html">homeController</prop>
				<prop key="/register.html">homeController</prop>
				<prop key="/upload_action.html">fileUploadController</prop>
				<prop key="/login.html">loginController</prop>
				<prop key="/keep_alive.html">loginController</prop>
			</props>
		</property>
	</bean>

	<dwr:annotation-config id="dwrAnnotationConfig" />
	<dwr:annotation-scan base-package="ubc.pavlab.aspiredb"
		scanDataTransferObject="true" scanRemoteProxy="true" />


</beans>